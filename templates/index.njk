{% extends "template.njk" %}
{% block content %}

<!-- destaque -->

<div class="container container-md">
  <div class="row g-4 my-5">
    <div class="col-12 text-center">
      <h1 class="display-3 lh-1 fw-bold mb-4">Descubra Tecnologias para um
        <span class="text-gradient">Ensino Mais Inclusivo</span>
        para Surdos
      </h1>
      <p class="fs-5 text-secondary">Encontre tecnologias assistivas que promovem a acessibilidade linguística para
        estudantes surdos em sala de aula, facilitando a comunicação e o aprendizado. Explore o catálogo, veja recursos
        pedagógicos e colabore sugerindo novas tecnologias!</p>
    </div>
  </div>
  <!-- busca -->
  <div id="filtros" class="row g-4 mb-5">
    <div class="col-12">
      <!-- Actual search box -->
      <div class="form-group has-search">
        <span class="bi bi-search form-control-icon"></span>
        <input id="search-input" type="text" class="form-control form-control-lg"
          placeholder="digite uma palavra chave" />
      </div>
    </div>
    <div class="col-12">
      <div class="d-flex flex-wrap justify-content-center">
        {% set categorias = [] %}
        {% for tec in tecnologias %}
        {% if tec.categoria not in categorias %}
        {% set _ = categorias.push(tec.categoria) %}
        {% endif %}
        {% endfor %}
        {% set categorias = categorias | sort %}
        <div class="dropdown">
          <button id="categoria-filter" class="btn btn-outline-secondary btn-sm dropdown-toggle me-2 mb-2 opacity-75"
            type="button" data-bs-toggle="dropdown" aria-expanded="false" data-label="Categoria">
            Categoria
          </button>
          <ul class="dropdown-menu">
            {% for categoria in categorias %}
            <li>
              <a class="dropdown-item" href="#" data-value="{{ categoria }}">{{ categoria }}</a>
            </li>
            {% endfor %}
          </ul>
        </div>
        {% set etapas = [
        'Educação Infantil',
        'Ensino Fundamental',
        'Ensino Médio',
        'EJA',
        'Ensino Superior'
        ] %}
        <div class="dropdown">
          <button id="etapa-filter" class="btn btn-outline-secondary btn-sm dropdown-toggle me-2 mb-2 opacity-75"
            type="button" data-bs-toggle="dropdown" aria-expanded="false" data-label="Etapa de Ensino">
            Etapa de Ensino
          </button>
          <ul class="dropdown-menu">
            {% for etapa in etapas %}
            <li>
              <a class="dropdown-item" href="#" data-value="{{ etapa }}">{{ etapa }}</a>
            </li>
            {% endfor %}
          </ul>
        </div>
        {% set custos = [
        'Gratuito',
        'Gratuito com Limitações',
        'Pago'
        ] %}
        <div class="dropdown">
          <button id="custo-filter" class="btn btn-outline-secondary btn-sm dropdown-toggle me-2 mb-2 opacity-75"
            type="button" data-bs-toggle="dropdown" aria-expanded="false" data-label="Custo">
            Custo
          </button>
          <ul class="dropdown-menu">
            {% for custo in custos %}
            <li>
              <a class="dropdown-item" href="#" data-value="{{ custo }}">{{ custo }}</a>
            </li>
            {% endfor %}
          </ul>
        </div>
        {% set plataformas = [
        'Aplicativo',
        'Site',
        'Desktop'
        ] %}
        <div class="dropdown">
          <button id="plataforma-filter" class="btn btn-outline-secondary btn-sm dropdown-toggle me-2 mb-2 opacity-75"
            type="button" data-bs-toggle="dropdown" aria-expanded="false" data-label="Plataforma">
            Plataforma
          </button>
          <ul class="dropdown-menu">
            {% for plataforma in plataformas %}
            <li>
              <a class="dropdown-item" href="#" data-value="{{ plataforma }}">{{ plataforma }}</a>
            </li>
            {% endfor %}
          </ul>
        </div>
        {% set internets = [
        'Requer Internet',
        'Requer Internet Parcialmente',
        'Não Requer Internet'
        ] %}
        <div class="dropdown">
          <button id="requerInternet-filter"
            class="btn btn-outline-secondary btn-sm dropdown-toggle me-2 mb-2 opacity-75" type="button"
            data-bs-toggle="dropdown" aria-expanded="false" data-label="Internet">
            Internet
          </button>
          <ul class="dropdown-menu">
            {% for internet in internets %}
            <li>
              <a class="dropdown-item" href="#" data-value="{{ internet }}">{{ internet }}</a>
            </li>
            {% endfor %}
          </ul>
        </div>
      </div>
      <button id="clear-filters" class="btn btn-warning btn-sm mx-auto" style="display:none"><i class="bi bi-x"></i>
        Limpar Filtros</button>
    </div>
  </div>
</div>
<!-- lista tecnologias -->
<div id="tech-list" class="container mb-5">
  <div class="list row g-4">
    {% for tec in tecnologias %}
    <article class="col-12 col-sm-6 col-md-4 technology-item" data-titulo="{{ tec.titulo | escape }}"
      data-descricao="{{ tec.descricao | escape }}" data-categoria="{{ tec.categoria | escape }}"
      data-etapa="{{ tec.etapas | replace(' - Anos Iniciais', '') | replace(' - Anos Finais', '') | escape }}"
      data-custo="{{ tec.custo | replace('Freemium', 'Gratuito com Limitações') | replace('Grátis', 'Gratuito') | escape }}"
      data-plataforma="{{ tec.plataformas | replace('iOS', 'Aplicativo') | replace('Android', 'Aplicativo') | escape }}"
      data-requer_internet="{{ tec.requer_internet | replace('Sim', 'Requer Internet') | replace('Não', 'Não Requer Internet') | replace('Parcialmente', 'Requer Internet Parcialmente') | escape }}">
      <div class="card card-hover h-100 position-relative">
        <div class="card-body d-flex gap-3">
          <img src="assets/images/tecnologias/{{ tec.slug }}-icon.jpg" alt="{{ tec.titulo }}" width="50" height="50"
            class="rounded shadow-sm flex-shrink-0">
          <div class="d-flex gap-2 w-100 justify-content-between">
            <div>
              <h2 class="h5 mb-0">
                <a href="tecnologias/{{ tec.slug }}/" class="stretched-link text-decoration-none text-dark">
                  {{ tec.titulo | truncate(22, true, '...') }}
                </a>
              </h2>
              <span class="text-secondary text-uppercase fw-bold" style="font-size: .7em">{{ tec.categoria }}</span>
              <p class="mt-2 mb-3 text-body-secondary lh-1">
                <small>{{ tec.apresentacao }}</small>
              </p>
              <p class="m-0">

                <span
                  class="badge opacity-75 bg-white-subtle border border-secondary-subtle text-secondary rounded-pill fw-normal">
                  <i class="bi bi-currency-dollar"></i>
                  {% if tec.custo == 'Grátis' %}
                  Gratuito
                  {% elseif tec.custo == 'Freemium' %}
                  Gratuito com Limitações
                  {% else %}
                  Pago
                  {% endif %}
                </span>

                <span
                  class="badge opacity-75 bg-white-subtle border border-secondary-subtle text-secondary rounded-pill fw-normal">
                  <i class="bi bi-wifi"></i>
                  {{ tec.requer_internet }}
                </span>

              </p>
            </div>
          </div>
        </div>
      </div>
    </article>
    {% endfor %}
  </div>
  <!-- No Results Message -->
  <div id="no-results" class="container container-md pt-3 my-3" style="display: none;">
    <div class="card card-body bg-light border-0">
      <p class="m-0">
        <i class="bi bi-exclamation-triangle"></i>
        Nenhum item encontrado.
      </p>
    </div>
  </div>
</div>
</div>
<div class="container container-md">
  <hr class="my-5 border-top border-1 border-secondary-subtle" />
  <!-- Recursos section -->
  <div class="row g-4">
    <div class="col-12">
      <div class="card border-0 card-body p-4 bg-gradiente bg-opacity-25 position-relative">
        <div class="row">
          <div class="col-12 col-sm-6 col-md-8">
            <h3 class="h4 fw-bold">Recursos Pedagógicos</h3>
            <p class="text-dark">Confira uma seleção de sites, vídeos e aplicativos contendo formação e informação que
              auxiliam e orientam
              sobre a educação para surdos. Acesse!</p>
          </div>
          <div class="col-12 col-sm-6 offset-md-1 col-md-3">
            <a href="recursos/" class="btn btn-shadow btn-white w-100 mt-4 stretched-link ">Ver recursos</a>
          </div>
        </div>
      </div>
    </div>
    <div class="col-12">
      <div class="card card-body p-4 bg-light border-0 position-relative">
        <div class="row">
          <div class="col-12 col-sm-6 col-md-8">
            <h3 class="h4 fw-bold">Indique uma Tecnologia!</h3>
            <p class="text-dark">Conhece alguma tecnologia assistiva que promova acessibilidade linguística para surdos
              que não está listada
              aqui? Compartilhe conosco e nos ajude a manter este catálogo completo e atualizado!</p>
          </div>
          <div class="col-12 col-sm-6 offset-md-1 col-md-3">
            <a href="contato/" class="btn btn-shadow btn-secondary w-100 mt-4 stretched-link ">Indique</a>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
<script src="https://cdnjs.cloudflare.com/ajax/libs/list.js/1.5.0/list.min.js"></script>
<script>
  document.addEventListener("DOMContentLoaded", function () { // Inicialize o List.js
    const options = {
      valueNames: [
        {
          data: ['titulo']
        },
        {
          data: ['descricao']
        },
        {
          data: ['categoria']
        },
        {
          data: ['etapa']
        }, {
          data: ['custo']
        }, {
          data: ['plataforma']
        }, {
          data: ['requer_internet']
        }
      ],
      listClass: 'list'
    };
    const techList = new List('tech-list', options);
    // Elementos de filtro
    const searchInput = document.getElementById('search-input');
    const clearFiltersButton = document.getElementById('clear-filters');
    const noResults = document.getElementById('no-results');
    const dropdowns = document.querySelectorAll('.dropdown-menu a');
    const dropdownButtons = document.querySelectorAll('.dropdown-toggle');
    // Função de filtro por texto
    searchInput.addEventListener('input', function () {
      const searchValue = this.value.trim();
      if (searchValue.length >= 2) {
        techList.search(searchValue);
      } else {
        techList.search('');
      } toggleNoResults();
      toggleClearButton();
    });
    // Função para aplicar filtros de dropdown
    dropdowns.forEach(dropdown => {
      dropdown.addEventListener('click', function (e) {
        e.preventDefault();
        const dropdownButton = e
          .target
          .closest('.dropdown')
          .querySelector('.dropdown-toggle');
        const filterType = dropdownButton.id.replace('-filter', '');
        const filterValue = e
          .target
          .dataset
          .value;
        // Atualiza o texto do botão dropdown
        dropdownButton.textContent = e.target.textContent;
        dropdownButton.classList.add('btn-secondary');
        dropdownButton.classList.remove('btn-outline-secondary');
        // Aplica o filtro ao List.js
        techList.filter(item => {
          if (filterType === 'etapa' || filterType === 'plataformas') { // Filtra por substring para o campo 'etapa'
            return item.values()[filterType].includes(filterValue);
          } else {
            return item.values()[filterType] === filterValue;
          }
        });
        toggleNoResults();
        toggleClearButton();
      });
    });
    // Função para limpar filtros
    clearFiltersButton.addEventListener('click', function () {
      searchInput.value = '';
      techList.search('');
      techList.filter();
      noResults.style.display = 'none';
      clearFiltersButton.style.display = 'none';
      // Reinicia o texto e o estilo dos botões dropdown
      dropdownButtons.forEach(button => {
        button.textContent = button.getAttribute('data-label'); // Retorna ao label original
        button.classList.add('btn-outline-secondary');
        button.classList.remove('btn-secondary');
      });
    });
    // Exibe/esconde o botão de limpar filtros
    function toggleClearButton() {
      const hasFilters = searchInput.value.length >= 2 || Array.from(dropdowns).some(dropdown => dropdown.closest('.dropdown').querySelector('.btn-secondary'));
      clearFiltersButton.style.display = hasFilters
        ? 'block'
        : 'none';
    }
    // Exibe/esconde a mensagem de "Nenhum item encontrado"
    function toggleNoResults() {
      noResults.style.display = techList.matchingItems.length === 0
        ? 'block'
        : 'none';
    }
  });
</script>
{% endblock %}